warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
/home/aurelien/git/koth/sources/src/api/IHardware.cpp:3:22: warning: use '= default' to define a trivial default constructor [hicpp-use-equals-default]
hardware::IHardware::IHardware() noexcept {}
                     ^                    ~~
                                          = default;
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
/home/aurelien/git/koth/sources/src/hardware/simulator/Simulator.cpp:32:1: warning: consider replacing 'unsigned long' with 'uint64' [google-runtime-int]
unsigned long Simulator::Millis() {
^
/home/aurelien/git/koth/sources/src/hardware/simulator/Simulator.cpp:33:3: warning: consider replacing 'unsigned long' with 'uint64' [google-runtime-int]
  unsigned long result;
  ^
/home/aurelien/git/koth/sources/src/hardware/simulator/Simulator.cpp:35:3: warning: consider replacing 'unsigned long long' with 'uint64' [google-runtime-int]
  unsigned long long milliseconds_since_epoch =
  ^
/home/aurelien/git/koth/sources/src/hardware/simulator/Simulator.cpp:39:3: warning: consider replacing 'unsigned long long' with 'uint64' [google-runtime-int]
  unsigned long long elapsed = milliseconds_since_epoch - _epoch;
  ^
/home/aurelien/git/koth/sources/src/hardware/simulator/Simulator.cpp:41:38: warning: consider replacing 'unsigned long' with 'uint64' [google-runtime-int]
  if (elapsed >= std::numeric_limits<unsigned long>::max()) {
                                     ^
/home/aurelien/git/koth/sources/src/hardware/simulator/Simulator.cpp:45:26: warning: consider replacing 'unsigned long' with 'uint64' [google-runtime-int]
    result = static_cast<unsigned long>(milliseconds_since_epoch);
                         ^
/home/aurelien/git/koth/sources/src/hardware/simulator/Simulator.cpp:50:1: warning: consider replacing 'long' with 'int64' [google-runtime-int]
long Simulator::PrimaryActionCount() { return _primaryActionExecutionCount; }
^
/home/aurelien/git/koth/sources/src/hardware/simulator/Simulator.cpp:52:1: warning: consider replacing 'long' with 'int64' [google-runtime-int]
long Simulator::SecondaryActionCount() {
^
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
/home/aurelien/git/koth/sources/src/transports/Software.cpp:3:1: warning: constructor does not initialize these fields: _player [cppcoreguidelines-pro-type-member-init]
transport::Software::Software() {
^
/home/aurelien/git/koth/sources/src/transports/Software.cpp:3:22: warning: use '= default' to define a trivial default constructor [hicpp-use-equals-default]
transport::Software::Software() {
                     ^          ~
                                = default;
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
/home/aurelien/git/koth/sources/src/weapons/Vampire.cpp:1:1: warning: #includes are not sorted properly [llvm-include-order]
#include <weapons/Vampire.h>
^        ~~~~~~~~~~~~~~~~~~~
         <api/Meta.h>
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
/home/aurelien/git/koth/sources/tests/ActionTest.cpp:10:13: warning: all parameters should be named in a function [readability-named-parameter]
int main(int, char **) {
            ^        ~
             /*unused*/  /*unused*/
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
/home/aurelien/git/koth/sources/tests/DummyTransportTest.cpp:8:13: warning: all parameters should be named in a function [readability-named-parameter]
int main(int, char **) {
            ^        ~
             /*unused*/  /*unused*/
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
/home/aurelien/git/koth/sources/tests/EntityTest.cpp:7:13: warning: all parameters should be named in a function [readability-named-parameter]
int main(int, char **) {
            ^        ~
             /*unused*/  /*unused*/
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
/home/aurelien/git/koth/sources/tests/SoftwareTransportTest.cpp:10:13: warning: all parameters should be named in a function [readability-named-parameter]
int main(int, char **) {
            ^        ~
             /*unused*/  /*unused*/
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
/home/aurelien/git/koth/sources/tests/VampireTest.cpp:12:13: warning: all parameters should be named in a function [readability-named-parameter]
int main(int, char **) {
            ^        ~
             /*unused*/  /*unused*/
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
/home/aurelien/git/koth/sources/tests/WeaponTest.cpp:10:13: warning: all parameters should be named in a function [readability-named-parameter]
int main(int, char **) {
            ^        ~
             /*unused*/  /*unused*/
/home/aurelien/git/koth/sources/tests/WeaponTest.cpp:23:3: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor]
  TestWeapon(transport::ITransport &transport)
  ^~~~~~~~~~
  explicit 
/home/aurelien/git/koth/sources/tests/WeaponTest.cpp:23:37: warning: non-const reference parameter 'transport', make it const or use a pointer [google-runtime-references]
  TestWeapon(transport::ITransport &transport)
                                    ^
/home/aurelien/git/koth/sources/tests/WeaponTest.cpp:30:12: warning: initialization of 'WEAPON_UNDER_TEST' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
TestWeapon WEAPON_UNDER_TEST(dummyTransport);
           ^
/home/aurelien/git/koth/sources/tests/WeaponTest.cpp:23:3: note: possibly throwing constructor declared here
  TestWeapon(transport::ITransport &transport)
  ^
/home/aurelien/git/koth/sources/tests/WeaponTest.cpp:34:3: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay]
  TEST_ASSERT(&actualPrimary == &Meta::Actions::DAMAGE5);
  ^
/home/aurelien/git/koth/sources/third_party/unity/src/unity.h:122:100: note: expanded from macro 'TEST_ASSERT'
#define TEST_ASSERT(condition)                                                                     UNITY_TEST_ASSERT(       (condition), __LINE__, " Expression Evaluated To FALSE")
                                                                                                   ^
/home/aurelien/git/koth/sources/third_party/unity/src/unity_internals.h:765:122: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}
                                                                                                                         ^
/home/aurelien/git/koth/sources/third_party/unity/src/unity_internals.h:758:55: note: expanded from macro 'UNITY_TEST_FAIL'
#define UNITY_TEST_FAIL(line, message)   UnityFail(   (message), (UNITY_LINE_TYPE)(line))
                                                      ^
/home/aurelien/git/koth/sources/tests/WeaponTest.cpp:39:3: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay]
  TEST_ASSERT(&actualSecondary == &Meta::Actions::HEAL5);
  ^
/home/aurelien/git/koth/sources/third_party/unity/src/unity.h:122:100: note: expanded from macro 'TEST_ASSERT'
#define TEST_ASSERT(condition)                                                                     UNITY_TEST_ASSERT(       (condition), __LINE__, " Expression Evaluated To FALSE")
                                                                                                   ^
/home/aurelien/git/koth/sources/third_party/unity/src/unity_internals.h:765:122: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}
                                                                                                                         ^
/home/aurelien/git/koth/sources/third_party/unity/src/unity_internals.h:758:55: note: expanded from macro 'UNITY_TEST_FAIL'
#define UNITY_TEST_FAIL(line, message)   UnityFail(   (message), (UNITY_LINE_TYPE)(line))
                                                      ^
warning: argument unused during compilation: '--coverage' [clang-diagnostic-unused-command-line-argument]
warning: optimization flag '-fno-default-inline' is not supported [clang-diagnostic-ignored-optimization-argument]
warning: optimization flag '-fno-inline-small-functions' is not supported [clang-diagnostic-ignored-optimization-argument]
/home/aurelien/git/koth/sources/tests/SimulatorTest.cpp:5:31: warning: macro argument should be enclosed in parentheses [misc-macro-parentheses]
#define PRINT(c) std::cout << c;
                              ^~
                              ()
/home/aurelien/git/koth/sources/tests/SimulatorTest.cpp:21:13: warning: all parameters should be named in a function [readability-named-parameter]
int main(int, char **) {
            ^        ~
             /*unused*/  /*unused*/
/home/aurelien/git/koth/sources/tests/SimulatorTest.cpp:36:10: warning: annotate this function with 'override' or (rarely) 'final' [hicpp-use-override]
    void OnTick() { tickCount++; }
         ^
                  override
/home/aurelien/git/koth/sources/tests/SimulatorTest.cpp:44:3: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay]
  TEST_ASSERT(hw.tickCount > 25);
  ^
/home/aurelien/git/koth/sources/third_party/unity/src/unity.h:122:100: note: expanded from macro 'TEST_ASSERT'
#define TEST_ASSERT(condition)                                                                     UNITY_TEST_ASSERT(       (condition), __LINE__, " Expression Evaluated To FALSE")
                                                                                                   ^
/home/aurelien/git/koth/sources/third_party/unity/src/unity_internals.h:765:122: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}
                                                                                                                         ^
/home/aurelien/git/koth/sources/third_party/unity/src/unity_internals.h:758:55: note: expanded from macro 'UNITY_TEST_FAIL'
#define UNITY_TEST_FAIL(line, message)   UnityFail(   (message), (UNITY_LINE_TYPE)(line))
                                                      ^
/home/aurelien/git/koth/sources/tests/SimulatorTest.cpp:63:3: warning: consider replacing 'unsigned long' with 'uint64' [google-runtime-int]
  unsigned long begin;
  ^
/home/aurelien/git/koth/sources/tests/SimulatorTest.cpp:64:3: warning: consider replacing 'unsigned long' with 'uint64' [google-runtime-int]
  unsigned long end;
  ^
